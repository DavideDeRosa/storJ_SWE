openapi: "3.0.0"
info:
  title: StorjApi
  description: StorjApi
  version: 1.0.0
servers:
  - url: '/api/v1'
tags:
  - name: Utenti

paths:

  '/utenti':
    post:
      tags:
        - "Utenti"
      operationId: postUtente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utente"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/utenti/{usernameUtente}':
    get:
      tags:
        - "Utenti"
      operationId: getUtenteByUsername
      parameters:
        - in: path
          name: usernameUtente
          required: true
          description: "restituisce l'utente tramite il suo username"
          schema:
            type: string
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/utenti/{usernameUtente}/pagamento':
    post:
      tags:
        - "Utenti"
      operationId: utentePayment
      parameters:
        - in: path
          name: usernameUtente
          required: true
          description: "effettua il pagamento per lo specifico utente"
          schema:
            type: string
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:

  schemas:

    Utente:
      type: object
      required:
        - id
        - username
        - password
        - statoPagamento
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        statoPagamento:
          type: boolean
          default: false

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string