openapi: "3.0.0"
info:
  title: StorjApi
  description: StorjApi
  version: 1.0.0
servers:
  - url: '/api/v1'
tags:
  - name: Utenti
  - name: Storie
  - name: Scenari
  - name: Scelte
  - name: Oggetti
  - name: Partite

paths:

  '/utenti':
    post:
      tags:
        - "Utenti"
      operationId: postUtente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utente"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/utenti/{usernameUtente}':
    get:
      tags:
        - "Utenti"
      operationId: getUtenteByUsername
      parameters:
        - in: path
          name: usernameUtente
          required: true
          description: "username dell'utente"
          schema:
            type: string
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/utenti/{usernameUtente}/pagamento':
    post:
      tags:
        - "Utenti"
      operationId: utentePayment
      parameters:
        - in: path
          name: usernameUtente
          required: true
          description: "username dell'utente"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentRequest"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/storie':
    post:
      tags:
        - "Storie"
      operationId: postStoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Storia"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Storia"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - "Storie"
      operationId: getStorie
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Storia"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/storie/{idStoria}':
    get:
      tags:
        - "Storie"
      operationId: getStoriaById
      parameters:
        - in: path
          name: idStoria
          required: true
          description: "ID della storia"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Storia"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Storie"
      operationId: putStoria
      parameters:
        - in: path
          name: idStoria
          required: true
          description: "ID della storia"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Storia"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Storia"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Storie"
      operationId: deleteStoria
      parameters:
        - in: path
          name: idStoria
          required: true
          description: "ID della storia"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Storia"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/scenari':
    post:
      tags:
        - "Scenari"
      operationId: postScenario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scenario"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scenario"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/storie/{idStoria}/scenari':
    get:
      tags:
        - "Scenari"
      operationId: getScenariByStoria
      parameters:
        - in: path
          name: idStoria
          required: true
          description: "ID della storia"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Scenario"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/scenari/{idScenario}':
    get:
      tags:
        - "Scenari"
      operationId: getScenarioById
      parameters:
        - in: path
          name: idScenario
          required: true
          description: "ID dello scenario"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scenario"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Scenari"
      operationId: putScenario
      parameters:
        - in: path
          name: idScenario
          required: true
          description: "ID dello scenario"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scenario"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Storia"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Scenari"
      operationId: deleteScenario
      parameters:
        - in: path
          name: idScenario
          required: true
          description: "ID dello scenario"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scenario"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/scelte':
    post:
      tags:
        - "Scelte"
      operationId: postScelta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scelta"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scelta"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/scenari/{idScenario}/scelte':
    get:
      tags:
        - "Scelte"
      operationId: getScelteByScenario
      parameters:
        - in: path
          name: idScenario
          required: true
          description: "ID dello scenario"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Scelta"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/scelte/{idScelta}':
    get:
      tags:
        - "Scelte"
      operationId: getSceltaById
      parameters:
        - in: path
          name: idScelta
          required: true
          description: "ID della scelta"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scelta"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Scelte"
      operationId: putScelta
      parameters:
        - in: path
          name: idScelta
          required: true
          description: "ID della scelta"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scelta"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scelta"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Scelte"
      operationId: deleteScelta
      parameters:
        - in: path
          name: idScelta
          required: true
          description: "ID della scelta"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scelta"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/oggetti':
    post:
      tags:
        - "Oggetti"
      operationId: postOggetto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Oggetto"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Oggetto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/storie/{idStoria}/oggetti':
    get:
      tags:
        - "Oggetti"
      operationId: getOggettiByStoria
      parameters:
        - in: path
          name: idStoria
          required: true
          description: "ID della storia"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Oggetto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/oggetti/{idOggetto}':
    get:
      tags:
        - "Oggetti"
      operationId: getOggettoById
      parameters:
        - in: path
          name: idOggetto
          required: true
          description: "ID dell'oggetto"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Oggetto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Oggetti"
      operationId: putOggetto
      parameters:
        - in: path
          name: idOggetto
          required: true
          description: "ID dell'oggetto"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Oggetto"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Oggetto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Oggetti"
      operationId: deleteOggetto
      parameters:
        - in: path
          name: idOggetto
          required: true
          description: "ID dell'oggetto"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Oggetto"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/partite':
    post:
      tags:
        - "Partite"
      operationId: postPartita
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Partita"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partita"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/utenti/{idUtente}/partite':
    get:
      tags:
        - "Partite"
      operationId: getPartiteByUtente
      parameters:
        - in: path
          name: idUtente
          required: true
          description: "ID dell'utente"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Partita"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/partite/{idPartita}':
    get:
      tags:
        - "Partite"
      operationId: getPartitaById
      parameters:
        - in: path
          name: idPartita
          required: true
          description: "ID della partita"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partita"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Partite"
      operationId: putPartita
      parameters:
        - in: path
          name: idPartita
          required: true
          description: "ID della partita"
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Partita"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partita"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Partite"
      operationId: deletePartita
      parameters:
        - in: path
          name: idPartita
          required: true
          description: "ID della partita"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partita"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:

  schemas:

    TipoRispostaEnum:
      type: string
      enum:
        - INDOVINELLO
        - MULTIPLA

    TipoScenarioEnum:
      type: string
      enum:
        - INIZIALE
        - NORMALE
        - FINALE

    Utente:
      type: object
      required:
        - id
        - username
        - password
        - statoPagamento
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        statoPagamento:
          type: boolean
          default: false

    PaymentRequest:
      type: object
      required:
        - amount
        - cardHolder
        - cardNumber
        - cvv
      properties:
        amount:
          type: number
          format: double
        cardHolder:
          type: string
        cardNumber:
          type: string
        cvv:
          type: string

    Storia:
      type: object
      required:
        - id
        - id_creatore
        - id_scenario_iniziale
        - categoria
        - numero_scenari
        - statoCompletamento
      properties:
        id:
          type: integer
          format: int64
        id_creatore:
          type: integer
          format: int64
        id_scenario_iniziale:
          type: integer
          format: int64
        categoria:
          type: string
        numero_scenari:
          type: integer
        statoCompletamento:
          type: boolean
          default: false

    Scenario:
      type: object
      required:
        - id
        - id_storia
        - id_oggetto_droppato
        - testo
        - tipo_risposta
        - tipo_scenario
      properties:
        id:
          type: integer
          format: int64
        id_storia:
          type: integer
          format: int64
        id_oggetto_droppato:
          type: integer
          format: int64
        testo:
          type: string
        tipo_risposta:
          $ref: "#/components/schemas/TipoRispostaEnum"
        tipo_scenario:
          $ref: "#/components/schemas/TipoScenarioEnum"

    Scelta:
      type: object
      required:
        - id
        - id_scenario
        - id_oggetto_richiesto
        - testo
        - id_scenario_successivo
        - risposta
        - id_scenario_risposta_sbagliata
      properties:
        id:
          type: integer
          format: int64
        id_scenario:
          type: integer
          format: int64
        id_oggetto_richiesto:
          type: integer
          format: int64
        testo:
          type: string
        id_scenario_successivo:
          type: integer
          format: int64
        risposta:
          type: string
        id_scenario_risposta_sbagliata:
          type: integer
          format: int64

    Oggetto:
      type: object
      required:
        - id
        - id_storia
        - nome
        - descrizione
      properties:
        id:
          type: integer
          format: int64
        id_storia:
          type: integer
          format: int64
        nome:
          type: string
        descrizione:
          type: string

    Partita:
      type: object
      required:
        - id
        - id_storia
        - id_utente
        - id_scenario_corrente
      properties:
        id:
          type: integer
          format: int64
        id_storia:
          type: integer
          format: int64
        id_utente:
          type: integer
          format: int64
        id_scenario_corrente:
          type: integer
          format: int64

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string